---
swagger: "2.0"
info:
  description: "The Reisebuddy 'Magic' API provides all operations that are needed\
    \ by the Bot Clients"
  version: "0.1"
  title: "Reisebuddy API"
  contact:
    name: "redlink GmbH"
    url: "http://redlink.co/"
    email: "support@redlink.co"
host: "reisebuddy.redlink.io"
basePath: "/"
tags:
- name: "query-builder-webservice"
  description: "Prepare/Build Queries"
- name: "prepare-webservice"
  description: "Prepare/Analyze a Conversation"
paths:
  /prepare:
    post:
      tags:
      - "prepare-webservice"
      summary: "prepare"
      description: "Analyzes the Messages in a Conversation and fills up the Tag-List."
      operationId: "prepareUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "transport"
        description: "transport"
        required: true
        schema:
          $ref: "#/definitions/Conversation"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Conversation"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      x-swagger-router-controller: "Preparewebservice"
  /query:
    post:
      tags:
      - "query-builder-webservice"
      summary: "query"
      description: "Build Queries based from the Conversation, using available Tokens."
      operationId: "buildQueryUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "conversation"
        description: "conversation"
        required: true
        schema:
          $ref: "#/definitions/Conversation"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Conversation"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      x-swagger-router-controller: "Querybuilderwebservice"
  /store:
    post:
      tags:
      - "store-builder-webservice"
      summary: "store"
      description: "Added manually by OJ for mocking"
      operationId: "buildStoreUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "conversation"
        description: "conversation"
        required: true
        schema:
          $ref: "#/definitions/Conversation"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Conversation"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      x-swagger-router-controller: "Storebuilderwebservice"
definitions:
  User:
    type: "object"
    required:
    - "id"
    properties:
      displayName:
        type: "string"
      homeTown:
        type: "string"
        description: "the hometown of the user, used as fallback for travel-inquires"
      id:
        type: "string"
        description: "unique ID"
      phoneNumber:
        type: "string"
  Message:
    type: "object"
    required:
    - "content"
    properties:
      content:
        type: "string"
        description: "message content"
      origin:
        type: "string"
        description: "origin of the message"
        enum:
        - "User"
        - "Agent"
      time:
        type: "string"
        format: "date-time"
  Query:
    type: "object"
    required:
    - "url"
    properties:
      serviceName:
        type: "string"
        description: "name of the service"
      url:
        type: "string"
        description: "query url"
  conversation metadata:
    type: "object"
    properties:
      lastMessageAnalyzed:
        type: "integer"
        format: "int32"
        description: "message offset"
      status:
        type: "string"
        description: "conversation status"
        enum:
        - "New"
        - "Ongoing"
        - "Complete"
  Conversation:
    type: "object"
    required:
    - "messages"
    - "user"
    properties:
      id:
        type: "string"
      messages:
        type: "array"
        description: "List of Messages"
        items:
          $ref: "#/definitions/Message"
      meta:
        $ref: "#/definitions/conversation metadata"
      queries:
        type: "array"
        description: "Queries suggested/executed"
        items:
          $ref: "#/definitions/Query"
      tokens:
        type: "array"
        description: "Tokens extracted"
        items:
          $ref: "#/definitions/Token"
      user:
        $ref: "#/definitions/User"
  Token:
    type: "object"
    required:
    - "end"
    - "messageIdx"
    - "start"
    - "type"
    - "value"
    properties:
      confidence:
        type: "number"
        format: "float"
        description: "confidence"
      end:
        type: "integer"
        format: "int32"
        description: "end-position"
      messageIdx:
        type: "integer"
        format: "int32"
        description: "message-index"
      start:
        type: "integer"
        format: "int32"
        description: "start-position"
      state:
        type: "string"
        description: "token state"
        enum:
        - "Suggested"
        - "Confirmed"
        - "Rejected"
      type:
        type: "string"
        description: "token type"
        enum:
        - "Date"
        - "Place"
        - "Train"
        - "QueryType"
      value:
        type: "object"
        description: "token value"
        properties: {}
